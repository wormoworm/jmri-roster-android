name: cicd-app

on:
  push:
    branches:
      - 'master'
    paths:
      - 'app/**'
      - '.github/workflows/cicd-app.yml'

jobs:
  test_app:
    name: Test app
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Run unit tests
        uses: maierj/fastlane-action@v1.4.0
        with:
          lane: 'android app_test'

  publish_app:
    name: Publish app
    runs-on: ubuntu-18.04
    needs: test_app
    if: "!contains(github.event.head_commit.message, '#skip-app-publish')"
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Deploy keystore
        run: echo '${{ secrets.RELEASE_KEYSTORE }}' | base64 -d > $ORG_GRADLE_PROJECT_keystorepath
        env:
          ORG_GRADLE_PROJECT_keystorepath: ${{ github.workspace }}/release.jks
      # - name: Deploy service_account.json
      #   run: echo '${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}' > ${{ github.workspace }}/service_account.json
          ###

      - name: Build and publish app
        uses: maierj/fastlane-action@v1.4.0
        with:
          lane: 'android app_publish'
        env:
          BUILD_NUMBER: ${{ github.run_number }}
          KEYSTORE_PATH: ${{ github.workspace }}/release.jks
          KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          KEYSTORE_PASSWORD_JMRI_ROSTER: ${{ secrets.RELEASE_KEYSTORE_ALIAS_JMRI_ROSTER_PASSWORD }}
          AAB_PATH: ${{ github.workspace }}/app/build/outputs/bundle/release/app-release.aab
          SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}

#       - name: Assemble app bundle
#         run: bash ./gradlew app:bundleRelease -P versionPatch=${{ github.run_number }}
#         env:
#           ORG_GRADLE_PROJECT_keystorepath: ${{ github.workspace }}/release.jks
#           ORG_GRADLE_PROJECT_keystorepassword: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
#           ORG_GRADLE_PROJECT_keypasswordjmriroster: ${{ secrets.RELEASE_KEYSTORE_ALIAS_JMRI_ROSTER_PASSWORD }}
      
#       - name: Publish app to Google Play alpha channel
#         uses: r0adkll/upload-google-play@v1.0.4
#         with:
#           serviceAccountJson: ${{ github.workspace }}/service_account.json
#           packageName: uk.tomhomewood.jmriroster
#           releaseFile: ${{ github.workspace }}/app/build/outputs/bundle/release/app-release.aab
#           track: alpha
#           whatsNewDirectory: ${{ github.workspace }}/app/app-release-notes
# #          mappingFile: ${{ github.workspace }}/app/build/outputs/mapping/release/mapping.txt